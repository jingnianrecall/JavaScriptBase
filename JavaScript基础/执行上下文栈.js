/**
 * 可执行代码
 * 
 * JavaScript可执行代码类型：全局代码、函数代码、eval代码
 * 当执行到一个函数的时候，就会进行准备工作，即执行上下文。
 */

 /**
  * 执行上下文栈
  * 写的函数多了之后如何管理创建那么多的执行上下文呢？
  * 所以JavaScript引擎创建了执行上下文栈（Execution context stack, ECS）。来管理执行上下文
  * 为了模拟执行上下文栈的行为，让我们定义执行上下文栈为一个数组：
  */
  ECStack = [];
  /**
   * JavaScript开始要解释执行代码的时候，最先遇到的就是全局代码
   * 初始化时首先向执行上下文栈压入一个全局执行上下文，我们用globalContext表示它
   * 只有当整个应用程序结束时，ECStack才会被清空，所以ECStack最底部永远有个globalContext
   */
  ECStack = [
      globalContext
  ];
  /**
   * 执行一个函数时，就会创建一个执行上下文，并亚茹执行上下文栈
   * 函数执行完毕时，就会将函数的执行上下文从栈中弹出
   */