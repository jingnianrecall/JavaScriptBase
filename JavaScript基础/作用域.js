/**
 * 作用域
 * 
 * 作用域指程序代码中定义变量的区域。
 * 作用域规定了如何查找变量（LHS RHS），也就是确定当前执行代码对变量的访问权限。
 * JavaScript采用词法作用域，也就是动态作用域
 */

 /**
  * 静态作用域与动态作用域
  * 
  * JavaScript采用的是词法作用域，函数的作用域在函数定义的时候就觉得了。
  * 与之相对的是动态作用域，函数的作用域是在函数调用的时候才决定。
  */

  // 例子
  var value = 1;

  function foo() {
    console.log(value);
  }

  function bar() {
      var value = 2;
      foo();
  }

  bar();

  /**
   * 假设为静态作用域，执行过程：
   * 执行foo函数，先从foo函数内部查找是否有局部变量value
   * 如果没有，就根据书写位置，查找上一层代码，也就是value结果等于1
   * 
   * 假设为动态作用域，执行过程：
   * 执行foo函数，依然是从foo函数内部查找是否有局部变量value
   * 如果没有，就从调用函数的作用域，也就是bar函数内部查找value变量，所以结果为2
   */

   // JavaScript函数的执行用到了作用域链，这个作用域链是在函数定义的时候创建的。嵌套的函数f()定义在这个作用域链里